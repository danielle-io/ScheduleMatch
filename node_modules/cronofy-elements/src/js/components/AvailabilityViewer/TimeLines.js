import React, { useContext } from "react";
import { css, jsx } from "@emotion/core";

import { ThemeContext } from "./AvailabilityViewer";
import { LabelsContext } from "./WeekWrapper";

const TimeLines = () => {
    const labels = useContext(LabelsContext);
    const [theme, setTheme] = useContext(ThemeContext);
    const height = theme.slotHeightCalc.height;

    const labelsOutput = labels.map(label => {
        const lineWidth = label.hour ? "1.5px" : "1px";
        const dashArray = label.hour ? "3,4" : "1,2";

        return (
            <div
                key={label.start}
                css={css`
                    display: block;
                    height: ${height}px;
                    position: relative;
                    &:first-of-type .${theme.prefix}__tick-mark {
                        display: none;
                    }
                `}
                className={`${theme.prefix}__timeline ${
                    label.hour ? `${theme.prefix}__timeline--hour` : ""
                }`}
            >
                <svg
                    css={css`
                        width: 100%;
                        height: ${lineWidth};
                        position: absolute;
                        top: -1px;
                        left: 0;
                    `}
                    className={`${theme.prefix}__tick-mark`}
                    viewBox="0 0 500 1"
                    preserveAspectRatio="none"
                >
                    <path
                        strokeWidth={lineWidth}
                        d="M0,1 L500,1"
                        stroke={theme.colors.hairline}
                        strokeDasharray={dashArray}
                        strokeLinecap="square"
                    />
                </svg>
            </div>
        );
    });
    return (
        <div
            css={css`
                width: 100%;
                height: 100%;
                border: 1px solid ${theme.colors.hairline};
                position: relative;
                z-index: 2;
                pointer-events: none;
                user-select: none;
            `}
            className={`${theme.prefix}__timelines`}
        >
            {labelsOutput}
        </div>
    );
};

export default TimeLines;
