import React from "react";
import { css, jsx } from "@emotion/core";
import { Scrollbars } from "react-custom-scrollbars";
// import { transparentize } from "polished";

const containerStyle = css`
    position: relative;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
`;
const shadowTopStyle = css`
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 10px;
    background: linear-gradient(
        to bottom,
        rgba(0, 0, 0, 0.2) 0%,
        rgba(0, 0, 0, 0) 100%
    );
`;
const shadowBottomStyle = css`
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 10px;
    background: linear-gradient(
        to top,
        rgba(0, 0, 0, 0.2) 0%,
        rgba(0, 0, 0, 0) 100%
    );
`;

class ShadowScrollbars extends React.Component {
    constructor(props, ...rest) {
        super(props, ...rest);
        this.state = {
            scrollTop: 0,
            scrollHeight: 0,
            clientHeight: 0
        };
        this.handleUpdate = this.handleUpdate.bind(this);
    }

    handleUpdate(values) {
        const { shadowTop, shadowBottom } = this.refs;
        const { scrollTop, scrollHeight, clientHeight } = values;
        const shadowTopOpacity = (1 / 20) * Math.min(scrollTop, 20);
        const bottomScrollTop = scrollHeight - clientHeight;
        const shadowBottomOpacity =
            (1 / 20) *
            (bottomScrollTop - Math.max(scrollTop, bottomScrollTop - 20));
        shadowTop.style.opacity = shadowTopOpacity;
        shadowBottom.style.opacity = shadowBottomOpacity;
    }

    render() {
        return (
            <div className="shadow-scroll" css={containerStyle}>
                <Scrollbars
                    css={css`
                        flex-grow: 1;
                    `}
                    className="shadow-scroll__inner"
                    ref="scrollbars"
                    onUpdate={this.handleUpdate}
                    {...this.props}
                />
                <div ref="shadowTop" css={shadowTopStyle} />
                <div ref="shadowBottom" css={shadowBottomStyle} />
            </div>
        );
    }
}

export default ShadowScrollbars;
