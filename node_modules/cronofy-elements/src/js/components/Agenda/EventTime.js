import React, { useContext } from "react";

import moment from "moment-timezone";
import { dayNumbersString, checkISO8601 } from "../../helpers/events";

import { I18nContext, ThemeContext } from "./Agenda";

const EventTime = ({ start, end, current, recurring }) => {
    const theme = useContext(ThemeContext);
    const i18n = useContext(I18nContext);
    const startObj = moment(start);
    const endObj = moment(end);
    // If the event string is *just* in YYYY-MM-DD format, it's an "all day" event
    const isAllDay = checkISO8601(start) && checkISO8601(end);
    // Normal time display
    let times = `${i18n.f(startObj, "LT")} - ${i18n.f(endObj, "LT")}`;
    // Does the event run over multiple days?
    let daysString = i18n.t("all_day");
    daysString += dayNumbersString(startObj, endObj, current);
    return (
        <React.Fragment>
            <span className={`${theme.prefix}__event__times`}>
                {isAllDay ? (
                    <span className={`${theme.prefix}__event__times--string`}>
                        {daysString}
                    </span>
                ) : (
                    <span className={`${theme.prefix}__event__times--time`}>
                        {times}
                    </span>
                )}
            </span>
            {recurring ? (
                <span className={`${theme.prefix}__event__icon--recurring`} />
            ) : null}
        </React.Fragment>
    );
};

export default EventTime;
