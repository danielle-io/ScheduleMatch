import React, { useContext } from "react";
import { css, jsx } from "@emotion/core";
import moment from "moment-timezone";

import {
    StaticSlotsContext,
    ExtrasContext,
    ThemeContext
} from "./AvailabilityRules";

const WeekGrid = () => {
    const staticSlots = useContext(StaticSlotsContext);
    const [extras, setExtras] = useContext(ExtrasContext);
    const [theme, setTheme] = useContext(ThemeContext);

    const days = staticSlots.map((slot, i) => {
        const isStartOfHour = moment(slot.start, "HH:mm").minutes() === 0;

        const lineWidth = isStartOfHour ? "1.5px" : "1px";
        const dashArray = isStartOfHour ? "3,4" : "1,2";
        return (
            <div
                css={css`
                    display: block;
                    margin: 0;
                    padding: 0;
                    height: ${extras.slotHeight.height}px;
                    width: 100%;
                    user-select: none;
                    pointer-events: none;
                    position: relative;
                    &:first-of-type .${theme.prefix}__tick-mark {
                        display: none;
                    }
                `}
                key={`slotTick_${i}`}
                className={`${theme.prefix}__tick-mark-wrapper`}
            >
                <svg
                    css={css`
                        width: 100%;
                        height: ${lineWidth};
                        position: absolute;
                        top: -1px;
                        left: 0;
                    `}
                    className={`${theme.prefix}__tick-mark`}
                    viewBox="0 0 500 1"
                    preserveAspectRatio="none"
                >
                    <path
                        strokeWidth={lineWidth}
                        d="M0,1 L500,1"
                        stroke={theme.colors.hairline}
                        strokeDasharray={dashArray}
                        strokeLinecap="square"
                    />
                </svg>
                <span className="visuallyhidden">{slot.start}</span>
            </div>
        );
    });
    return (
        <div
            css={css`
                display: block;
                position: absolute;
                top: 0;
                left: 0;
                margin: 0;
                padding: 0;
                width: 100%;
                border: 1px solid ${theme.colors.hairline};
                user-select: none;
                pointer-events: none;
            `}
            className={`${theme.prefix}__grid-border`}
        >
            {days}
        </div>
    );
};

export default WeekGrid;
