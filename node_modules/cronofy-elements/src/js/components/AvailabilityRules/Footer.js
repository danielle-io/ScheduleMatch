import React, { useContext } from "react";
import { css, jsx } from "@emotion/core";

import {
    ExtrasContext,
    I18nContext,
    ThemeContext,
    StatusContext
} from "./AvailabilityRules";
import Legend from "./Legend";
import TimeZoneDisplay from "./TimeZoneDisplay";
import RemoveButton from "./RemoveButton";
import LoadingSpinner from "../generic/LoadingSpinner";

import { buttonReset } from "../../styles/utils";

const Footer = ({ generateRules }) => {
    const [extras, setExtras] = useContext(ExtrasContext);
    const [status, setStatus] = useContext(StatusContext);
    const i18n = useContext(I18nContext);
    const [theme, setTheme] = useContext(ThemeContext);
    return (
        <div
            css={css`
                margin-top: 20px;
                display: flex;
                justify-content: stretch;
                align-items: center;
                @media (max-width: 550px) {
                    flex-wrap: wrap;
                    align-items: flex-end;
                }
            `}
            className={`${theme.prefix}__footer`}
        >
            <div
                className={`${theme.prefix}__footer-spacer`}
                css={css`
                    display: block;
                    width: ${theme.sizes.labelWidth}px;
                    flex-shrink: 0;
                    height: ${extras.slotHeight.height}px;
                    @media (max-width: 550px) {
                        display: none;
                    }
                `}
            />
            <Legend />
            <TimeZoneDisplay />
            {status.saved ? (
                <div
                    css={css`
                        padding: 10px;
                        background: ${theme.colors.whiteDark};
                        border-left: 4px solid
                            ${status.savedSuccess
                                ? theme.colors.green
                                : theme.colors.red};
                        margin-right: 10px;
                        flex-shrink: 0;
                    `}
                    className={`${theme.prefix}__confirmation`}
                >
                    {status.savedSuccess
                        ? i18n.t("rules_saved")
                        : i18n.t("error")}
                    <RemoveButton
                        callback={() => setStatus({ ...status, saved: false })}
                    />
                </div>
            ) : null}
            <button
                type="button"
                css={css`
                    ${buttonReset};
                    display: block;
                    cursor: pointer;
                    position: relative;
                    background: ${theme.colors.primary};
                    color: ${theme.colors.white};
                    padding: 10px;
                    border-radius: 2px;
                    width: 132px;
                    flex-shrink: 0;
                    text-align: center;
                `}
                onClick={() => generateRules()}
                className={`${theme.prefix}__submit`}
            >
                {status.saving ? (
                    <div
                        css={css`
                            display: flex;
                            justify-content: space-between;
                            font-size: 1em;
                            align-items: center;
                        `}
                        className={`${theme.prefix}__submit-inner`}
                    >
                        <LoadingSpinner
                            size={20}
                            padding={0}
                            color={theme.colors.white}
                        />
                        <span
                            css={css`
                                display: block;
                                width: 100%;
                            `}
                        >
                            {i18n.t("saving")}
                        </span>
                    </div>
                ) : (
                    i18n.t("save_new_rules")
                )}
            </button>
        </div>
    );
};

export default Footer;
