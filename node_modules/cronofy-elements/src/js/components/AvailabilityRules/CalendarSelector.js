import React, { useContext } from "react";
import { css, jsx } from "@emotion/core";
import { transparentize } from "polished";

import { I18nContext, ThemeContext } from "./AvailabilityRules";
import Checkmark from "./Checkmark";

import { buttonReset } from "../../styles/utils";

const CalendarSelector = ({ calendars, done, add, remove }) => {
    const i18n = useContext(I18nContext);
    const [theme, setTheme] = useContext(ThemeContext);

    const calendarsMarkup = calendars.all.map(cal => {
        const isActive = calendars.active.includes(cal.id);
        const callback = isActive ? remove : add;
        return (
            <div
                css={css`
                    display: flex;
                    align-items: center;
                    cursor: pointer;
                    user-select: none;
                    margin-bottom: 20px;
                `}
                key={`cal-toggle-${cal.id}`}
                onClick={() => callback(cal.id)}
                className={`${theme.prefix}__calendars__modal-list-item`}
            >
                <Checkmark checked={isActive} />
                <div
                    className={`${theme.prefix}__calendars__modal-item-details`}
                >
                    <span
                        css={css`
                            font-weight: bold;
                            display: block;
                            line-height: 1;
                            margin-bottom: 4px;
                        `}
                        className={`${theme.prefix}__calendars__modal-item-title`}
                    >
                        {cal.name}
                    </span>
                    <span
                        css={css`
                            display: block;
                            font-size: 12px;
                            font-style: italic;
                            line-height: 12px;
                            color: ${theme.colors.grey};
                        `}
                        className={`${theme.prefix}__calendars__modal-item-subtitle`}
                    >{`${cal.profile_name} [${cal.provider_name}]`}</span>
                </div>
            </div>
        );
    });

    return (
        <div
            css={css`
                position: absolute;
                z-index: 6;
                top: 20px;
                left: 10px;
                background: ${theme.colors.white};
                border: 1px solid ${theme.colors.hairline};
                border-radius: 4px;
                box-shadow: ${transparentize(0.8, theme.colors.black)} 0 1px 3px
                    0;
                padding: 30px 20px 10px 10px;
            `}
            className={`${theme.prefix}__calendars__modal`}
        >
            <button
                type="button"
                css={css`
                    ${buttonReset};
                    position: absolute;
                    top: 7px;
                    right: 7px;
                    width: 12px;
                    height: 12px;
                `}
                className={`${theme.prefix}__calendars__modal-close`}
                onClick={done}
            >
                <svg
                    css={css`
                        position: absolute;
                        top: 50%;
                        left: 50%;
                        transform: translate(-50%, -50%);
                        width: 12px;
                        height: 12px;
                        display: block;
                    `}
                    className={`${theme.prefix}__calendars__modal-close-icon`}
                    viewBox="0 0 7 6"
                >
                    <path
                        fill={theme.colors.black}
                        d="M3.5 2.287L5.451.336c.163-.163.455-.135.651.062.197.196.225.488.062.65L4.213 3l1.951 1.951c.163.163.135.455-.062.651-.196.197-.488.225-.65.062L3.5 3.713 1.549 5.664c-.163.163-.455.135-.651-.062-.197-.196-.225-.488-.062-.65L2.787 3 .836 1.049C.673.886.7.594.898.398c.196-.197.488-.225.65-.062L3.5 2.287z"
                    />
                </svg>
                <span className="visuallyhidden">{i18n.t("close")}</span>
            </button>
            <div
                css={css`
                    display: block;
                    padding: 0;
                    margin: 0;
                `}
                className={`${theme.prefix}__calendars__modal-list`}
            >
                {calendarsMarkup}
            </div>
        </div>
    );
};

export default CalendarSelector;
