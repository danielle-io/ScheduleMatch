import React, { useContext } from "react";
import { css, jsx } from "@emotion/core";
import moment from "moment-timezone";

import { getWeekDays } from "../../helpers/slots.rules";

import {
    StatusContext,
    ExtrasContext,
    I18nContext,
    ThemeContext
} from "./AvailabilityRules";

const dayLookup = {
    sunday: "2020-03-01",
    monday: "2020-03-02",
    tuesday: "2020-03-03",
    wednesday: "2020-03-04",
    thursday: "2020-03-05",
    friday: "2020-03-06",
    saturday: "2020-03-07"
};

const DayLabel = ({ day, height }) => {
    const i18n = useContext(I18nContext);
    const [theme, setTheme] = useContext(ThemeContext);

    const dayObject = moment(dayLookup[day], "YYYY-MM-DD", true);

    return (
        <div
            css={css`
                height: ${height}px;
                line-height: ${height}px;
                width: ${theme.sizes.columnWidth}px;
                flex-shrink: 1;
                text-transform: capitalize;
                text-align: center;
            `}
            className={`${theme.prefix}__label--day`}
        >
            {i18n.f(dayObject, "ddd")}
        </div>
    );
};

const DayLabels = () => {
    const [status, setStatus] = useContext(StatusContext);
    const days = getWeekDays(status.startDay);
    const [extras, setExtras] = useContext(ExtrasContext);
    const [theme, setTheme] = useContext(ThemeContext);

    return (
        <div
            css={css`
                position: relative;
                width: 100%;
                display: flex;
                @media (max-width: 550px) {
                    margin-top: 16px;
                }
            `}
            className={`${theme.prefix}__label-row`}
        >
            <div
                className="spacer"
                css={css`
                    display: block;
                    width: ${theme.sizes.labelWidth}px;
                    flex-shrink: 1;
                    height: ${extras.slotHeight.height}px;
                    @media (max-width: 550px) {
                        display: none;
                    }
                `}
            />
            <div
                css={css`
                    width: 100%;
                    display: flex;
                    align-content: stretch;
                `}
            >
                {days.map(day => (
                    <DayLabel key={`${day}-header`} day={day} height={40} />
                ))}
            </div>
        </div>
    );
};

export default DayLabels;
