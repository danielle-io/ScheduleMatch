import React, { useContext } from "react";
import { css, jsx } from "@emotion/core";
import moment from "moment-timezone";

import Button from "../generic/Button";

import { I18nContext, ThemeContext, StatusContext } from "./SlotPicker";

import { buttonReset } from "../../styles/utils";

const Confirm = ({ back, confirm }) => {
    const [status] = useContext(StatusContext);
    const theme = useContext(ThemeContext);
    const i18n = useContext(I18nContext);
    const details = status.selected;

    return (
        <div
            css={css`
                padding: ${theme.padding};
                display: flex;
                justify-content: center;
                flex-grow: 1;
                align-items: center;
                text-align: center;

                flex-grow: 1;
                flex-direction: column;
                padding-bottom: 60px;
            `}
            className={`${theme.prefix}__confirmation-wrapper`}
        >
            <div
                className={`${theme.prefix}__slots-header`}
                css={css`
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    position: relative;
                    height: 22px;
                    margin-bottom: 20px;
                    width: 100%;
                `}
            >
                <button
                    type="button"
                    css={css`
                        ${buttonReset};
                        display: block;
                        padding: 4px;
                        height: 22px;
                        width: 22px;
                        position: absolute;
                        top: 50%;
                        left: 0;
                        transform: translateY(-50%);
                    `}
                    onClick={back}
                >
                    <svg
                        css={css`
                            fill: ${theme.colors.grey};
                            display: block;
                            width: 18px;
                            height: 18px;
                            transform: rotate(-90deg);
                        `}
                        className={`${theme.prefix}__slots-icon ${theme.prefix}__slots-icon--back`}
                    >
                        <use xlinkHref={`#arrow`} />
                    </svg>
                    <span className="visuallyhidden">{i18n.t("back")}</span>
                </button>
                <span
                    css={css`
                        display: block;
                        padding: 0 10px 0 0;
                        line-height: 1;
                    `}
                    className={`${theme.prefix}__slots-heading`}
                >
                    {i18n.f(moment(details.start), "dddd Do MMMM")}
                </span>
            </div>
            <div
                css={css`
                    width: 100%;
                    margin: 30px auto 0;
                `}
                className={`${theme.prefix}__confirmation`}
            >
                <div
                    css={css`
                        margin-bottom: 16px;
                        border: 1px solid ${theme.colors.hairline};
                        padding: 16px;
                        width: 100%;
                        border-radius: 4px;
                    `}
                    className={`${theme.prefix}__confirmation-summary`}
                >
                    {i18n.f(moment(details.start), "LT").replace(" ", "")} -{" "}
                    {i18n.f(moment(details.end), "LT").replace(" ", "")}
                </div>
                <div
                    css={css`
                        margin: 0 auto;
                        width: 10em;
                    `}
                    className={`${theme.prefix}__confirmation-buttons`}
                >
                    <Button
                        styleOverrides={theme}
                        styles={css`
                            width: 100%;
                            margin-bottom: 0.5em;
                            background: ${theme.colors.primary};
                            color: ${theme.colors.white};
                            border-radius: 4px;
                            display: flex;
                            justify-content: center;
                            align-items: center;
                            position: relative;
                            &:hover {
                                background: ${theme.colors.primaryDark};
                            }
                        `}
                        className={`${theme.prefix}__confirmation-button`}
                        onClick={() => confirm(details)}
                    >
                        {i18n.t("confirm")}
                    </Button>
                    <Button
                        styleOverrides={theme}
                        styles={css`
                            display: flex;
                            justify-content: center;
                            align-items: center;
                            width: 100%;
                            border-radius: 4px;
                            border: 1px solid ${theme.colors.hairline};
                            transition: background 0.2s, border 0.2s;
                            position: relative;
                            background: ${theme.colors.greyPale};
                            &:hover {
                                background: ${theme.colors.greyLight};
                            }
                        `}
                        className={`${theme.prefix}__confirmation-button--back`}
                        onClick={back}
                    >
                        {i18n.t("cancel")}
                    </Button>
                </div>
            </div>
        </div>
    );
};

export default Confirm;
