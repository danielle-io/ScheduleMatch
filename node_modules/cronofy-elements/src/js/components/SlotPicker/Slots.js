import React, { useContext, useEffect } from "react";
import { css, jsx } from "@emotion/core";

import Loading from "../generic/Loading";
import Slot from "./Slot";

import { I18nContext, ThemeContext, StatusContext } from "./SlotPicker";

const Slots = ({ periods = [], confirm }) => {
    const theme = useContext(ThemeContext);
    const [status] = useContext(StatusContext);
    const i18n = useContext(I18nContext);

    const emptySlotStyles = css`
        text-align: center;
        display: block;
        width: 100%;
        box-sizing: border-box;
        padding: 1em;
        margin-bottom: 0.5em;
    `;

    const slots = periods.map((period, key) => (
        <Slot period={period} key={key} confirm={confirm} />
    ));

    useEffect(() => {
        if (periods.length <= 0 && !status.loading) {
            const notification = {
                notification: {
                    type: "no_slots_found"
                }
            };
            status.callback(notification);
        }
    }, [periods]);

    return (
        <Loading loading={status.loading}>
            {periods.length <= 0 ? (
                <div
                    css={css`
                        flex-grow: 0;
                        width: 100%;
                    `}
                    className={`${theme.prefix}__slots-list--empty`}
                >
                    <div
                        css={emptySlotStyles}
                        className={`${theme.prefix}__slot--empty`}
                    >
                        {i18n.t("no_slots_found")}
                    </div>
                </div>
            ) : (
                <div
                    className={`${theme.prefix}__slots-list`}
                    css={css`
                        flex-grow: 1;
                    `}
                >
                    {slots}
                </div>
            )}
        </Loading>
    );
};

export default Slots;
