import React, { useContext } from "react";
import { css, jsx } from "@emotion/core";

import { buttonReset } from "../../styles/utils";

import { I18nContext, ThemeContext } from "./SlotPicker";

const Slot = ({ period, confirm }) => {
    const theme = useContext(ThemeContext);
    const i18n = useContext(I18nContext);

    let slotStyles = css`
        ${buttonReset};

        position: relative;
        display: block;
        width: 100%;
        padding: 10px 10px;
        cursor: pointer;
        transition: background 0.2s, color 0.2s;
        font-size: inherit;
        background: ${theme.colors.greyPale};
        border: 1px solid ${theme.colors.hairline};
        border-radius: 4px;
        margin-bottom: 10px;
        &:hover {
            background: ${theme.colors.greyLight};
        }
    `;

    let unavailableSlotStyles = css`
        ${slotStyles};
        border-color: transparent;
        cursor: default;
        &:hover {
            background: inherit;
        }
    `;

    return (
        <React.Fragment>
            {period.value ? (
                <button
                    type="button"
                    css={slotStyles}
                    className={`${theme.prefix}__slot`}
                    onClick={() => confirm(period.value)}
                >
                    <span>{period.label}</span>
                </button>
            ) : (
                <button
                    type="button"
                    css={unavailableSlotStyles}
                    className={`${theme.prefix}__slot--unavailble`}
                    onClick={() => confirm(period)}
                >
                    {i18n.t("not_applicable")}
                </button>
            )}
        </React.Fragment>
    );
};

export default Slot;
