import {
    parseToken,
    parseTarget,
    parseConnectionDomains,
    parseTranslations
} from "./init";
import { logConstructor } from "./logging";

export const parseAgendaOptions = (options = {}) => {
    let config = typeof options.config === "undefined" ? {} : options.config;
    const logs = typeof config.logs === "undefined" ? "warn" : config.logs;
    const log = logConstructor(logs, "Agenda View");

    const demoMode = typeof options.demo === "undefined" ? false : options.demo;
    if (demoMode) {
        log.warn("You are running in demo mode. No API requests will be made");
    }

    const token = parseToken(options, "agenda-view", log);
    if (!token && !demoMode) {
        log.error(
            "You need to include an `element_token`. If you're just testing (and don't want to use real API data) you can set the `demo` option to `true` to bypass the API connection and view dummy content."
        );
        return false;
    }

    const target = parseTarget(options, "agenda", log);

    const domains = parseConnectionDomains(
        options.data_center,
        options.api_domain,
        options.app_domain
    );

    const translations = parseTranslations(
        options.translations,
        "availability_rules"
    );

    delete options.target_id;
    delete options.element_token;
    delete options.translations;

    return {
        ...options,
        config: { ...config, logs },
        target,
        token,
        domains,
        translations
    };
};
