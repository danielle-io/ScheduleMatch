import {
    parseToken,
    parseTarget,
    parseConnectionDomains,
    parseTranslations
} from "./init";
import { logConstructor } from "./logging";

export const parseAvailabilityRulesOptions = (options = {}) => {
    let config = typeof options.config === "undefined" ? {} : options.config;
    const logs = typeof config.logs === "undefined" ? "warn" : config.logs;
    const log = logConstructor(logs, "Availability Rules");
    const startDay =
        typeof config.week_start_day === "undefined"
            ? "sunday"
            : config.week_start_day;

    const validStartDays = [
        "sunday",
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday"
    ];
    const validStartDay = validStartDays.includes(startDay);

    if (!validStartDay) {
        log.error(
            `Please provide a valid \`config.week_start_day\`. \`${startDay}\` is not a supported value.`,
            {
                docsSlug: "availability-viewer/#config.week_start_day"
            }
        );
        return false;
    }

    options.error = false;
    const demoMode = typeof options.demo === "undefined" ? false : options.demo;
    if (demoMode) {
        log.warn("You are running in demo mode. No API requests will be made");
    }

    const token = parseToken(options, "availability-rules", log);
    if (!token && !demoMode) {
        log.error(
            "You need to include an `element_token`. If you're just testing (and don't want to use real API data) you can set the `demo` option to `true` to bypass the API connection and view dummy content."
        );
        return false;
    }

    const target = parseTarget(options, "availability-rules", log);

    if (typeof options.availability_rule_id === "undefined") {
        // options.error = true;
        log.warn(
            'You have not defined an availability_rule_id, so "default" will be used instead. Full details can be found on the Cronofy Elements documention page: https://docs.cronofy.com/developers/ui-elements/'
        );
    }

    const translations = parseTranslations(
        options.translations,
        "availability_rules"
    );

    if (typeof options.tzid === "undefined") {
        options.error = true;
        log.error(
            "You need to include a `tzid`. Full details can be found on the Cronofy Elements documention page: https://docs.cronofy.com/developers/ui-elements/availability-rules/#tzid"
        );
        return false;
    }

    const domains = parseConnectionDomains(
        options.data_center,
        options.api_domain,
        options.app_domain
    );

    delete options.target_id;
    delete options.element_token;
    delete options.translations;
    delete config.week_start_day;

    return {
        ...options,
        target,
        token,
        domains,
        config: { ...config, logs, startDay },
        translations
    };
};
